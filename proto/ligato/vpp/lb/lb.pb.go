// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ligato/vpp/lb/lb.proto

package vpp_lb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LBVip_Encap int32

const (
	LBVip_GRE4  LBVip_Encap = 0
	LBVip_GRE6  LBVip_Encap = 1
	LBVip_L3DSR LBVip_Encap = 2
	LBVip_NAT4  LBVip_Encap = 3
	LBVip_NAT6  LBVip_Encap = 4
)

var LBVip_Encap_name = map[int32]string{
	0: "GRE4",
	1: "GRE6",
	2: "L3DSR",
	3: "NAT4",
	4: "NAT6",
}

var LBVip_Encap_value = map[string]int32{
	"GRE4":  0,
	"GRE6":  1,
	"L3DSR": 2,
	"NAT4":  3,
	"NAT6":  4,
}

func (x LBVip_Encap) String() string {
	return proto.EnumName(LBVip_Encap_name, int32(x))
}

func (LBVip_Encap) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_132b616304948c4e, []int{1, 0}
}

type LBVip_SrvType int32

const (
	LBVip_CLUSTERIP LBVip_SrvType = 0
	LBVip_NODEPORT  LBVip_SrvType = 1
	LBVip_N_TYPES   LBVip_SrvType = 2
)

var LBVip_SrvType_name = map[int32]string{
	0: "CLUSTERIP",
	1: "NODEPORT",
	2: "N_TYPES",
}

var LBVip_SrvType_value = map[string]int32{
	"CLUSTERIP": 0,
	"NODEPORT":  1,
	"N_TYPES":   2,
}

func (x LBVip_SrvType) String() string {
	return proto.EnumName(LBVip_SrvType_name, int32(x))
}

func (LBVip_SrvType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_132b616304948c4e, []int{1, 1}
}

type LBGlobal struct {
	Ip4SrcAddress        string   `protobuf:"bytes,1,opt,name=ip4_src_address,json=ip4SrcAddress,proto3" json:"ip4_src_address,omitempty"`
	Ip6SrcAddress        string   `protobuf:"bytes,2,opt,name=ip6_src_address,json=ip6SrcAddress,proto3" json:"ip6_src_address,omitempty"`
	Bucket               uint32   `protobuf:"varint,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Timeout              uint32   `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LBGlobal) Reset()         { *m = LBGlobal{} }
func (m *LBGlobal) String() string { return proto.CompactTextString(m) }
func (*LBGlobal) ProtoMessage()    {}
func (*LBGlobal) Descriptor() ([]byte, []int) {
	return fileDescriptor_132b616304948c4e, []int{0}
}

func (m *LBGlobal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LBGlobal.Unmarshal(m, b)
}
func (m *LBGlobal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LBGlobal.Marshal(b, m, deterministic)
}
func (m *LBGlobal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LBGlobal.Merge(m, src)
}
func (m *LBGlobal) XXX_Size() int {
	return xxx_messageInfo_LBGlobal.Size(m)
}
func (m *LBGlobal) XXX_DiscardUnknown() {
	xxx_messageInfo_LBGlobal.DiscardUnknown(m)
}

var xxx_messageInfo_LBGlobal proto.InternalMessageInfo

func (m *LBGlobal) GetIp4SrcAddress() string {
	if m != nil {
		return m.Ip4SrcAddress
	}
	return ""
}

func (m *LBGlobal) GetIp6SrcAddress() string {
	if m != nil {
		return m.Ip6SrcAddress
	}
	return ""
}

func (m *LBGlobal) GetBucket() uint32 {
	if m != nil {
		return m.Bucket
	}
	return 0
}

func (m *LBGlobal) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type LBVip struct {
	Prefix               string        `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Protocol             uint32        `protobuf:"varint,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Port                 uint32        `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Encap                LBVip_Encap   `protobuf:"varint,4,opt,name=encap,proto3,enum=ligato.vpp.lb.LBVip_Encap" json:"encap,omitempty"`
	Dscp                 uint32        `protobuf:"varint,5,opt,name=dscp,proto3" json:"dscp,omitempty"`
	SrvType              LBVip_SrvType `protobuf:"varint,6,opt,name=srv_type,json=srvType,proto3,enum=ligato.vpp.lb.LBVip_SrvType" json:"srv_type,omitempty"`
	TargetPort           uint32        `protobuf:"varint,7,opt,name=target_port,json=targetPort,proto3" json:"target_port,omitempty"`
	NodePort             uint32        `protobuf:"varint,8,opt,name=node_port,json=nodePort,proto3" json:"node_port,omitempty"`
	NewLen               uint32        `protobuf:"varint,9,opt,name=new_len,json=newLen,proto3" json:"new_len,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LBVip) Reset()         { *m = LBVip{} }
func (m *LBVip) String() string { return proto.CompactTextString(m) }
func (*LBVip) ProtoMessage()    {}
func (*LBVip) Descriptor() ([]byte, []int) {
	return fileDescriptor_132b616304948c4e, []int{1}
}

func (m *LBVip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LBVip.Unmarshal(m, b)
}
func (m *LBVip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LBVip.Marshal(b, m, deterministic)
}
func (m *LBVip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LBVip.Merge(m, src)
}
func (m *LBVip) XXX_Size() int {
	return xxx_messageInfo_LBVip.Size(m)
}
func (m *LBVip) XXX_DiscardUnknown() {
	xxx_messageInfo_LBVip.DiscardUnknown(m)
}

var xxx_messageInfo_LBVip proto.InternalMessageInfo

func (m *LBVip) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *LBVip) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *LBVip) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *LBVip) GetEncap() LBVip_Encap {
	if m != nil {
		return m.Encap
	}
	return LBVip_GRE4
}

func (m *LBVip) GetDscp() uint32 {
	if m != nil {
		return m.Dscp
	}
	return 0
}

func (m *LBVip) GetSrvType() LBVip_SrvType {
	if m != nil {
		return m.SrvType
	}
	return LBVip_CLUSTERIP
}

func (m *LBVip) GetTargetPort() uint32 {
	if m != nil {
		return m.TargetPort
	}
	return 0
}

func (m *LBVip) GetNodePort() uint32 {
	if m != nil {
		return m.NodePort
	}
	return 0
}

func (m *LBVip) GetNewLen() uint32 {
	if m != nil {
		return m.NewLen
	}
	return 0
}

type LBAs struct {
	Prefix               string   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Protocol             uint32   `protobuf:"varint,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LBAs) Reset()         { *m = LBAs{} }
func (m *LBAs) String() string { return proto.CompactTextString(m) }
func (*LBAs) ProtoMessage()    {}
func (*LBAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_132b616304948c4e, []int{2}
}

func (m *LBAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LBAs.Unmarshal(m, b)
}
func (m *LBAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LBAs.Marshal(b, m, deterministic)
}
func (m *LBAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LBAs.Merge(m, src)
}
func (m *LBAs) XXX_Size() int {
	return xxx_messageInfo_LBAs.Size(m)
}
func (m *LBAs) XXX_DiscardUnknown() {
	xxx_messageInfo_LBAs.DiscardUnknown(m)
}

var xxx_messageInfo_LBAs proto.InternalMessageInfo

func (m *LBAs) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *LBAs) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *LBAs) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *LBAs) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterEnum("ligato.vpp.lb.LBVip_Encap", LBVip_Encap_name, LBVip_Encap_value)
	proto.RegisterEnum("ligato.vpp.lb.LBVip_SrvType", LBVip_SrvType_name, LBVip_SrvType_value)
	proto.RegisterType((*LBGlobal)(nil), "ligato.vpp.lb.LBGlobal")
	proto.RegisterType((*LBVip)(nil), "ligato.vpp.lb.LBVip")
	proto.RegisterType((*LBAs)(nil), "ligato.vpp.lb.LBAs")
}

func init() { proto.RegisterFile("ligato/vpp/lb/lb.proto", fileDescriptor_132b616304948c4e) }

var fileDescriptor_132b616304948c4e = []byte{
	// 451 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xc1, 0x8e, 0x94, 0x40,
	0x10, 0x5d, 0x66, 0x98, 0x01, 0x6a, 0x45, 0x49, 0x1f, 0x56, 0xb2, 0xc6, 0xb8, 0xe1, 0x60, 0xf6,
	0x22, 0x18, 0x87, 0x10, 0xa3, 0xa7, 0x19, 0x97, 0x6c, 0x4c, 0xc8, 0xec, 0x04, 0xd0, 0x44, 0x2f,
	0x04, 0x98, 0x76, 0x24, 0xb6, 0x74, 0xa7, 0xe9, 0x65, 0xdd, 0x7f, 0xf0, 0x03, 0xfc, 0x5c, 0x43,
	0x37, 0x18, 0x27, 0xf1, 0xe8, 0xad, 0xde, 0xab, 0xc7, 0xab, 0x57, 0x4d, 0xc1, 0x19, 0x69, 0x0e,
	0xa5, 0xa0, 0x41, 0xcf, 0x58, 0x40, 0xaa, 0x80, 0x54, 0x3e, 0xe3, 0x54, 0x50, 0x64, 0x2b, 0xde,
	0xef, 0x19, 0xf3, 0x49, 0xe5, 0xfd, 0xd4, 0xc0, 0x4c, 0x36, 0xd7, 0x84, 0x56, 0x25, 0x41, 0xcf,
	0xe1, 0x51, 0xc3, 0xc2, 0xa2, 0xe3, 0x75, 0x51, 0xee, 0xf7, 0x1c, 0x77, 0x9d, 0xab, 0x5d, 0x68,
	0x97, 0x56, 0x6a, 0x37, 0x2c, 0xcc, 0x78, 0xbd, 0x56, 0xa4, 0xd2, 0x45, 0x47, 0xba, 0xd9, 0xa4,
	0x8b, 0xfe, 0xd2, 0x9d, 0xc1, 0xb2, 0xba, 0xad, 0xbf, 0x61, 0xe1, 0xce, 0x2f, 0xb4, 0x4b, 0x3b,
	0x1d, 0x11, 0x72, 0xc1, 0x10, 0xcd, 0x77, 0x4c, 0x6f, 0x85, 0xab, 0xcb, 0xc6, 0x04, 0xbd, 0x5f,
	0x73, 0x58, 0x24, 0x9b, 0x8f, 0x0d, 0x1b, 0xbe, 0x65, 0x1c, 0x7f, 0x69, 0x7e, 0x8c, 0x11, 0x46,
	0x84, 0xce, 0xc1, 0x94, 0x8b, 0xd4, 0x94, 0xc8, 0xa1, 0x76, 0xfa, 0x07, 0x23, 0x04, 0x3a, 0xa3,
	0x7c, 0x9a, 0x26, 0x6b, 0xf4, 0x12, 0x16, 0xb8, 0xad, 0x4b, 0x26, 0x27, 0x3d, 0x7c, 0x75, 0xee,
	0x1f, 0xed, 0xef, 0xcb, 0x61, 0x7e, 0x3c, 0x28, 0x52, 0x25, 0x1c, 0x5c, 0xf6, 0x5d, 0xcd, 0xdc,
	0x85, 0x72, 0x19, 0x6a, 0xf4, 0x1a, 0xcc, 0x8e, 0xf7, 0x85, 0xb8, 0x67, 0xd8, 0x5d, 0x4a, 0xa3,
	0xa7, 0xff, 0x34, 0xca, 0x46, 0x51, 0x6a, 0x74, 0xbc, 0xcf, 0xef, 0x19, 0x46, 0xcf, 0xe0, 0x54,
	0x94, 0xfc, 0x80, 0x45, 0x21, 0xa3, 0x19, 0xd2, 0x14, 0x14, 0xb5, 0x1b, 0x02, 0x3e, 0x01, 0xab,
	0xa5, 0x7b, 0xac, 0xda, 0xa6, 0xda, 0x68, 0x20, 0x64, 0xf3, 0x31, 0x18, 0x2d, 0xbe, 0x2b, 0x08,
	0x6e, 0x5d, 0x4b, 0x3d, 0x61, 0x8b, 0xef, 0x12, 0xdc, 0x7a, 0x6f, 0x60, 0x21, 0x43, 0x23, 0x13,
	0xf4, 0xeb, 0x34, 0x0e, 0x9d, 0x93, 0xb1, 0x8a, 0x1c, 0x0d, 0x59, 0xb0, 0x48, 0x56, 0x57, 0x59,
	0xea, 0xcc, 0x06, 0x72, 0xbb, 0xce, 0x43, 0x67, 0x3e, 0x56, 0x91, 0xa3, 0x7b, 0x21, 0x98, 0x53,
	0x4e, 0x64, 0x83, 0xf5, 0x2e, 0xf9, 0x90, 0xe5, 0x71, 0xfa, 0x7e, 0xe7, 0x9c, 0xa0, 0x07, 0x60,
	0x6e, 0x6f, 0xae, 0xe2, 0xdd, 0x4d, 0x9a, 0x3b, 0x1a, 0x3a, 0x05, 0x63, 0x5b, 0xe4, 0x9f, 0x76,
	0x71, 0xe6, 0xcc, 0xbc, 0xaf, 0xa0, 0x27, 0x9b, 0x75, 0xf7, 0xdf, 0x7e, 0x8c, 0x0b, 0xc6, 0x74,
	0x3c, 0xba, 0x34, 0x9a, 0xe0, 0x26, 0xfa, 0x1c, 0x1e, 0xe8, 0xf4, 0xbc, 0x8d, 0x3c, 0xe1, 0x17,
	0xe5, 0x01, 0xb7, 0x22, 0xe8, 0x57, 0x81, 0xf4, 0x0c, 0x8e, 0x8e, 0xfb, 0x6d, 0xcf, 0x58, 0x41,
	0xaa, 0x6a, 0x29, 0x7b, 0xab, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x94, 0x47, 0x1a, 0xf5, 0xfb,
	0x02, 0x00, 0x00,
}
